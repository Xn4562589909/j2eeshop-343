<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iweb.mapper.ReviewMapper">

    <resultMap id="reviewBean" type="Review">
        <id column="rid" property="id" />
        <result column="content" property="content" />
        <result column="nickname" property="nickname" />
        <result column="rGmtModified" property="gmtModified" />
        <result column="rCreateDate" property="createDate" />
        <association property="product" javaType="Product" >
            <id column="pid" property="id" />
            <result column="pname" property="name" />
            <result column="subTitle" property="subTitle" />
            <result column="originalPrice" property="originalPrice" />
            <result column="promotePrice" property="promotePrice" />
            <result column="stock" property="stock" />
            <result column="pCreateDate" property="createDate" />
            <result column="pGmtModified" property="gmtModified" />
            <association property="category" javaType="Category" >
                <id column="cid" property="id" />
                <result column="cname" property="name" />
                <result column="cGmtCreate" property="gmtCreate" />
                <result column="cGmtModified" property="gmtModified" />
            </association>
        </association>
        <association property="user" javaType="User" >
            <id column="uid" property="id" />
            <result column="uname" property="name" />
            <result column="password" property="password" />
            <result column="uGmtCreate" property="gmtCreate" />
            <result column="uGmtModified" property="gmtModified" />
        </association>
    </resultMap>

    <insert id="add" parameterType="Review" useGeneratedKeys="true" keyProperty="id">
        insert into review(content,uid,pid,nickname) values(#{content},#{user.id},#{product.id},#{nickname})
    </insert>

    <delete id="delete" parameterType="int">
        delete from review where id=#{id}
    </delete>

    <select id="get" parameterType="_int" resultMap="reviewBean" >
        select r.id 'rid',r.content 'content',r.createDate 'rCreateDate',r.gmtModified 'rGmtModified',r.nickname 'nickname',
        p.id 'pid',p.name 'pname',p.subTitle 'subTitle',p.originalPrice 'originalPrice',p.promotePrice 'promotePrice',
        p.stock 'stock',p.createDate 'pCreateDate',p.gmtModified 'pGmtModified',u.id 'uid',u.name 'uname',u.password 'password',
        u.gmtCreate 'uGmtCreate',u.gmtModified 'uGmtModified',c.id 'cid',c.name 'cname',c.gmtCreate 'cGmtCreate',
        c.gmtModified 'cGmtModified' from review r left join product p on r.pid = p.id left join `user` u
        on r.uid = u.id left join category c on p.cid = c.id where r.id=#{id}
    </select>

    <update id="update" parameterType="Review" >
        update review set content=#{content},uid=#{user.id},pid=#{product.id},nickname=#{nickname},gmtModified=now() where id=#{id}
    </update>

    <select id="list" resultMap="reviewBean">
        select r.id 'rid',r.content 'content',r.createDate 'rCreateDate',r.gmtModified 'rGmtModified',r.nickname 'nickname',
        p.id 'pid',p.name 'pname',p.subTitle 'subTitle',p.originalPrice 'originalPrice',p.promotePrice 'promotePrice',
        p.stock 'stock',p.createDate 'pCreateDate',p.gmtModified 'pGmtModified',u.id 'uid',u.name 'uname',u.password 'password',
        u.gmtCreate 'uGmtCreate',u.gmtModified 'uGmtModified',c.id 'cid',c.name 'cname',c.gmtCreate 'cGmtCreate',
        c.gmtModified 'cGmtModified' from review r left join product p on r.pid = p.id left join `user` u
        on r.uid = u.id left join category c on p.cid = c.id
    </select>

    <select id="getTotal" resultType="_int" >
        select count(*) from review
    </select>

    <select id="listByPid" resultMap="reviewBean" parameterType="_int" >
        select r.id 'rid',r.content 'content',r.createDate 'rCreateDate',r.gmtModified 'rGmtModified',r.nickname 'nickname',
        p.id 'pid',p.name 'pname',p.subTitle 'subTitle',p.originalPrice 'originalPrice',p.promotePrice 'promotePrice',
        p.stock 'stock',p.createDate 'pCreateDate',p.gmtModified 'pGmtModified',u.id 'uid',u.name 'uname',u.password 'password',
        u.gmtCreate 'uGmtCreate',u.gmtModified 'uGmtModified',c.id 'cid',c.name 'cname',c.gmtCreate 'cGmtCreate',
        c.gmtModified 'cGmtModified' from review r left join product p on r.pid = p.id left join `user` u
        on r.uid = u.id left join category c on p.cid = c.id where r.pid = #{pid}
    </select>

    <select id="getTotalByPid" resultType="int" parameterType="_int">
        select count(*) from review where pid=#{pid}
    </select>

    <select id="listByUid" parameterType="_int" resultMap="reviewBean" >
        select r.id 'rid',r.content 'content',r.createDate 'rCreateDate',r.gmtModified 'rGmtModified',r.nickname 'nickname',
        p.id 'pid',p.name 'pname',p.subTitle 'subTitle',p.originalPrice 'originalPrice',p.promotePrice 'promotePrice',
        p.stock 'stock',p.createDate 'pCreateDate',p.gmtModified 'pGmtModified',u.id 'uid',u.name 'uname',u.password 'password',
        u.gmtCreate 'uGmtCreate',u.gmtModified 'uGmtModified',c.id 'cid',c.name 'cname',c.gmtCreate 'cGmtCreate',
        c.gmtModified 'cGmtModified' from review r left join product p on r.pid = p.id left join `user` u
        on r.uid = u.id left join category c on p.cid = c.id where r.uid = #{uid}
    </select>

</mapper>